{"version":3,"file":"static/js/696.79dceb7d.chunk.js","mappings":"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","sources":["components/CountryCard.jsx","components/SearchBox.jsx","components/RegionSelection.jsx","components/UserQueries.jsx","Pages/Home/HomePage.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.article`\n  border-radius: var(--radii);\n  background-color: car(--colors-ui-base);\n  box-shadow: var(--shadow);\n  cursor: pointer;\n  overflow: hidden;\n`;\n\nconst CardImg = styled.img`\n  display: block;\n  width: 100%;\n  height: 150px;\n  object-fit: cover;\n  object-position: center;\n  box-shadow: var(--shadow);\n`;\n\nconst CardInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-bottom: 1rem;\n`;\n\nconst CardInfoItem = styled.li`\n  margin: 0;\n  font-size: var(--fs-sm);\n  line-height: 1.5;\n  font-weight: var(--fw-light);\n\n  & > b {\n    font-weight: var(--fw-bold);\n  }\n`;\n\nconst CardTitle = styled.h3`\n  font-size: var(--fs-md);\n  font-weight: var(--fw-bold);\n  height: 25px;\n  text-align: center;\n`;\n\nconst CardList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 1rem 0 0;\n  text-align: center;\n`;\n\nexport const CountryCard = ({\n  name,\n  pageName,\n  population,\n  region,\n  capital,\n  flag,\n}) => {\n  return (\n    <Link to={`/countryinfo/${pageName}`}>\n      <Wrapper>\n        <CardImg src={flag} alt={name} />\n        <CardInfo>\n          <CardTitle>{name}</CardTitle>\n          <CardList>\n            <CardInfoItem>\n              <b>Population</b>: {population}\n            </CardInfoItem>\n            <CardInfoItem>\n              <b>Region</b>: {region}\n            </CardInfoItem>\n            <CardInfoItem>\n              <b>Capital</b>: {capital}\n            </CardInfoItem>\n          </CardList>\n        </CardInfo>\n      </Wrapper>\n    </Link>\n  );\n};\n\nexport default CountryCard;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectUserSearchQuery, setSearchValue } from 'redux/userQueriesSlice';\nimport styled from 'styled-components';\n\nconst InputContainer = styled.label`\n  background-color: var(--colors-ui-base);\n  padding: 1rem 2rem;\n  display: flex;\n  align-items: center;\n  height: 35px;\n\n  border-radius: var(--radii);\n  box-shadow: var(--shadow);\n  width: 100%;\n  margin-bottom: 1rem;\n\n  @media (min-width: 767px) {\n    margin-bottom: 0;\n    width: 280px;\n  }\n`;\n\nconst Input = styled.input.attrs({\n  type: 'search',\n  placeholder: 'Country search',\n})`\n  margin-left: 2rem;\n  border: none;\n  outline: none;\n  color: var(--color-text);\n  background-color: var(--colors-ui-base);\n`;\n\nconst SearchBox = () => {\n  const userSearchQuery = useSelector(selectUserSearchQuery);\n  const dispatch = useDispatch();\n\n  const handleUserSearchQuery = e => {\n    dispatch(setSearchValue(e.target.value));\n  };\n\n  return (\n    <InputContainer>\n      <Input\n        type=\"text\"\n        value={userSearchQuery}\n        onChange={handleUserSearchQuery}\n      />\n    </InputContainer>\n  );\n};\n\nexport default SearchBox;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setRegion } from 'redux/userQueriesSlice';\nimport styled from 'styled-components';\n\nconst RadioButtonForm = styled.form`\n  text-align: center;\n`;\n\nconst RadioButtonSection = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  gap: 10px;\n`;\n\nconst RbDiv = styled.span`\n  cursor: pointer;\n  background-color: var(--colors-ui-base);\n  border-radius: var(--radii);\n  box-shadow: var(--shadow);\n  display: flex;\n  align-items: center;\n  padding: 2px 10px;\n`;\n\nconst RbNane = styled.span`\n  font-weight: 600;\n  margin-right: 5px;\n  text-align: center;\n`;\n\nconst RegionSelection = () => {\n  const dispatch = useDispatch();\n\n  const onOptionChange = e => {\n    dispatch(setRegion(e.target.value));\n  };\n\n  return (\n    <RadioButtonForm>\n      <h3>Choose region</h3>\n      <RadioButtonSection>\n        <label>\n          <RbDiv>\n            <RbNane>Europe</RbNane>\n            <input\n              type=\"radio\"\n              name=\"region\"\n              value=\"Europe\"\n              onChange={onOptionChange}\n              defaultChecked\n            />\n          </RbDiv>\n        </label>\n        <label>\n          <RbDiv>\n            <RbNane>Asia</RbNane>\n            <input\n              type=\"radio\"\n              name=\"region\"\n              value=\"Asia\"\n              onChange={onOptionChange}\n            />\n          </RbDiv>\n        </label>\n        <label>\n          <RbDiv>\n            <RbNane>Oceania</RbNane>\n            <input\n              type=\"radio\"\n              name=\"region\"\n              value=\"Oceania\"\n              onChange={onOptionChange}\n            />\n          </RbDiv>\n        </label>\n        <label>\n          <RbDiv>\n            <RbNane>Africa</RbNane>\n            <input\n              type=\"radio\"\n              name=\"region\"\n              value=\"Africa\"\n              onChange={onOptionChange}\n            />\n          </RbDiv>\n        </label>\n        <label>\n          <RbDiv>\n            <RbNane>Americas</RbNane>\n            <input\n              type=\"radio\"\n              name=\"region\"\n              value=\"Americas\"\n              onChange={onOptionChange}\n            />\n          </RbDiv>\n        </label>\n      </RadioButtonSection>\n    </RadioButtonForm>\n  );\n};\n\nexport default RegionSelection;\n","import React from 'react';\nimport styled from 'styled-components';\nimport SearchBox from './SearchBox';\nimport RegionSelection from './RegionSelection';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n  justify-content: center;\n  padding: 2rem 0;\n  margin: 0 auto;\n\n  @media (min-width: 380px) {\n    width: 320px;\n  }\n\n  @media (min-width: 768px) {\n    width: 100%;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    padding: 2.5rem 0;\n  }\n\n  @media (min-width: 1024px) {\n  }\n`;\n\nexport const UserQueries = () => {\n  return (\n    <Wrapper>\n      <SearchBox />\n      <RegionSelection />\n    </Wrapper>\n  );\n};\n\nexport default UserQueries;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport {\n  requestCountriesThunk,\n  selectAllCountries,\n  selectcountriesError,\n  selectcountriesIsLoading,\n} from 'redux/countryListSlice';\nimport CountryCard from 'components/CountryCard';\nimport UserQueries from 'components/UserQueries';\nimport Loader from 'components/Loader';\nimport styled from 'styled-components';\nimport { Container } from 'components/Container';\nimport {\n  selectUserRegion,\n  selectUserSearchQuery,\n} from 'redux/userQueriesSlice';\n\nconst List = styled.section`\n  /* width: 380px; */\n  padding: 2rem 0;\n  margin: 0 auto;\n  display: grid;\n  grid-template-columns: repeat(1, 1fr);\n  gap: 2rem;\n\n  @media (min-width: 380px) {\n    width: 320px;\n  }\n\n  @media (min-width: 768px) {\n    width: 100%;\n    grid-template-columns: repeat(2, 1fr);\n    gap: 3rem;\n\n    padding: 2.5rem 0;\n  }\n\n  @media (min-width: 1024px) {\n    grid-template-columns: repeat(4, 1fr);\n    gap: 4rem;\n  }\n`;\n\nexport const HomePage = () => {\n  const allCountries = useSelector(selectAllCountries);\n  const region = useSelector(selectUserRegion);\n  const userSearchQuery = useSelector(selectUserSearchQuery);\n  const isLoading = useSelector(selectcountriesIsLoading);\n  const error = useSelector(selectcountriesError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (allCountries) {\n      return;\n    }\n    dispatch(requestCountriesThunk());\n  }, [allCountries, dispatch]);\n\n  const countryByRegion = allCountries?.filter(\n    country => country.region === region\n  );\n\n  const getSearchedCountries = () => {\n    const normalizedFilter = userSearchQuery.toLocaleLowerCase();\n    return allCountries?.filter(country =>\n      country.name.common.toLocaleLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const showCountires =\n    Array.isArray(allCountries) && allCountries.length > 0 && !userSearchQuery;\n  const showSearchedCountries =\n    Array.isArray(allCountries) && allCountries.length > 0 && userSearchQuery;\n\n  return (\n    <Container>\n      {isLoading && <Loader />}\n      {error && <p>Error occured... Error is {error}</p>}\n      <UserQueries />\n      <List>\n        {showCountires &&\n          countryByRegion.map(\n            ({ name, population, region, capital, flags, fifa }) => {\n              if (name.official === 'Russian Federation') return null;\n\n              return (\n                <li key={name.common}>\n                  <CountryCard\n                    name={name.common}\n                    pageName={name.official}\n                    population={population}\n                    region={region}\n                    capital={capital}\n                    flag={flags.png}\n                    fifa={fifa}\n                  />\n                </li>\n              );\n            }\n          )}\n\n        {showSearchedCountries &&\n          getSearchedCountries().map(\n            ({ name, population, region, capital, flags, fifa }) => {\n              if (name.official === 'Russian Federation') return null;\n\n              return (\n                <li key={name.common}>\n                  <CountryCard\n                    name={name.common}\n                    pageName={name.official}\n                    population={population}\n                    region={region}\n                    capital={capital}\n                    flag={flags.png}\n                    fifa={fifa}\n                  />\n                </li>\n              );\n            }\n          )}\n      </List>\n    </Container>\n  );\n};\n\nexport default HomePage;\n"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","CardImg","_templateObject2","CardInfo","_templateObject3","CardInfoItem","_templateObject4","CardTitle","_templateObject5","CardList","_templateObject6","_ref","name","pageName","population","region","capital","flag","_jsx","Link","to","concat","children","_jsxs","src","alt","InputContainer","Input","type","placeholder","userSearchQuery","useSelector","selectUserSearchQuery","dispatch","useDispatch","value","onChange","e","setSearchValue","target","RadioButtonForm","RadioButtonSection","RbDiv","RbNane","onOptionChange","setRegion","defaultChecked","SearchBox","RegionSelection","List","HomePage","allCountries","selectAllCountries","selectUserRegion","isLoading","selectcountriesIsLoading","error","selectcountriesError","useEffect","requestCountriesThunk","countryByRegion","filter","country","showCountires","Array","isArray","length","showSearchedCountries","Container","Loader","UserQueries","map","flags","fifa","official","CountryCard","common","png","normalizedFilter","toLocaleLowerCase","includes","getSearchedCountries","_ref2"],"sourceRoot":""}