{"version":3,"file":"static/js/225.a563909a.chunk.js","mappings":"oRAEMA,EAAUC,EAAAA,GAAAA,QAAcC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0JAOxBC,EAAUH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,6IASpBG,EAAWL,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,wGAOrBK,EAAeP,EAAAA,GAAAA,EAAQQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,mLA0B7B,EAd2B,SAAHO,GAAmD,IAA9CC,EAAID,EAAJC,KAAMC,EAAUF,EAAVE,WAAYC,EAAMH,EAANG,OAAQC,EAAOJ,EAAPI,QAASC,EAAIL,EAAJK,KAC5D,OACIC,EAAAA,EAAAA,MAAChB,EAAO,CAAAiB,SAAA,EACRC,EAAAA,EAAAA,KAACd,EAAO,CAACe,IAAKJ,EAAMK,IAAKT,KACzBK,EAAAA,EAAAA,MAACV,EAAQ,CAAAW,SAAA,EACTC,EAAAA,EAAAA,KAAA,MAAAD,SAAKN,KACLK,EAAAA,EAAAA,MAACR,EAAY,CAAAS,SAAA,EAACC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,eAAc,KAAGL,MAClCI,EAAAA,EAAAA,MAACR,EAAY,CAAAS,SAAA,EAACC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,WAAU,KAAGJ,MAC9BG,EAAAA,EAAAA,MAACR,EAAY,CAAAS,SAAA,EAACC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,YAAW,KAAGH,UAIvC,E,kBCpCMO,EAAOpB,EAAAA,GAAAA,QAAcC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wXAuBdmB,EAAW,WACtB,IAAMC,GAAeC,EAAAA,EAAAA,IAAYC,EAAAA,IAC3BC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IACxBC,GAAQJ,EAAAA,EAAAA,IAAYK,EAAAA,IACpBC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,MACX,GAAG,CAACH,IAEJ,IAAMI,EAAgBC,MAAMC,QAAQb,IAAiBA,EAAac,OAAS,EAI3E,OAFAC,QAAQC,IAAIhB,IAGVP,EAAAA,EAAAA,MAACwB,EAAAA,EAAS,CAAAvB,SAAA,CACLS,IAAaR,EAAAA,EAAAA,KAACuB,EAAAA,EAAM,IACtBb,IAASZ,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,6BAA2BW,MACxCV,EAAAA,EAAAA,KAACG,EAAI,CAAAJ,SACFiB,GACCX,EAAamB,KAAI,SAAAhC,GAAmD,IAAhDC,EAAID,EAAJC,KAAMC,EAAUF,EAAVE,WAAYC,EAAMH,EAANG,OAAQC,EAAOJ,EAAPI,QAAS6B,EAAKjC,EAALiC,MACrD,MACI,uBADDhC,EAAKiC,SAED,MAED1B,EAAAA,EAAAA,KAAA,MAAAD,UACNC,EAAAA,EAAAA,KAAC2B,EAAW,CACVlC,KAAMA,EAAKiC,SACXhC,WAAYA,EACZC,OAAQA,EACRC,QAASA,EACTC,KAAM4B,EAAMG,OANCnC,EAAKiC,SAShC,QAIA,EAEA,G","sources":["components/CountryCard.jsx","Pages/Home/HomePage.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nconst Wrapper = styled.article`\nborder-radius: var(--radii);\n  background-color: car(--colors-ui-base);\n  box-shadow: var(--shadow);\n  cursor: pointer;\n  overflow: hidden\n`;\nconst CardImg = styled.img`\ndisplay: block;\n  width: 100%;\n  height: 150px;\n  object-fit: cover;\n  object-position: center;\n  box-shadow: var(--shadow);\n`;\n\nconst CardInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-bottom: 1rem;\n`;\n\nconst CardInfoItem = styled.p`\n    padding: 0;\n    margin: 0;\n    font-size: var(--fs-sm);\n  line-height: 1.5;\n  font-weight: var(--fw-light);\n\n  & > b {\n    font-weight: var(--fw-bold);\n  }\n`;\n\nexport const CountryCard = ({name, population, region, capital, flag}) => {\n    return (\n        <Wrapper>\n        <CardImg src={flag} alt={name} />\n        <CardInfo>\n        <h3>{name}</h3>\n        <CardInfoItem><b>Population</b>: {population}</CardInfoItem>\n        <CardInfoItem><b>Region</b>: {region}</CardInfoItem>\n        <CardInfoItem><b>Capital</b>: {capital}</CardInfoItem>\n        </CardInfo>\n        </Wrapper>\n    );\n};\n\nexport default CountryCard;","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport {\n  requestCountriesThunk,\n  selectAllCountries,\n  selectcountriesError,\n  selectcountriesIsLoading,\n} from 'redux/countryListSlice';\nimport CountryCard from 'components/CountryCard';\nimport Loader from 'components/Loader';\nimport styled from 'styled-components';\nimport { Container } from 'components/Container';\n\nconst List = styled.section`\n    width: 380px;\n    padding: 2rem 0;\n\n    display: grid;\n    grid-template-columns: repeat(1, 1fr);\n    gap: 2rem;\n\n    @media (min-width: 767px) {\n    width: 100%;\n    grid-template-columns: repeat(2, 1fr);\n    gap: 3rem;\n\n    padding: 2.5rem 0;\n  }\n\n  @media (min-width: 1024px) {\n    grid-template-columns: repeat(4, 1fr);\n    gap: 4rem;\n  }\n`;\n\n\nexport const HomePage = () => {\n  const allCountries = useSelector(selectAllCountries);\n  const isLoading = useSelector(selectcountriesIsLoading);\n  const error = useSelector(selectcountriesError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(requestCountriesThunk());\n  }, [dispatch]);\n\n  const showCountires = Array.isArray(allCountries) && allCountries.length > 0;\n\n  console.log(allCountries);\n\n  return (\n    <Container>\n        {isLoading && <Loader />}\n      {error && <p>Error occured... Error is {error}</p>}\n      <List>\n        {showCountires &&\n          allCountries.map(({ name, population, region, capital, flags }) => {\n            if(name.official === \n                \"Russian Federation\") \n            return null\n            \n           return <li key={name.official}>\n            <CountryCard\n              name={name.official}\n              population={population}\n              region={region}\n              capital={capital}\n              flag={flags.png}\n            />\n          </li>\n})}\n      </List>\n    </Container>\n  );\n};\n\nexport default HomePage;\n"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","CardImg","_templateObject2","CardInfo","_templateObject3","CardInfoItem","_templateObject4","_ref","name","population","region","capital","flag","_jsxs","children","_jsx","src","alt","List","HomePage","allCountries","useSelector","selectAllCountries","isLoading","selectcountriesIsLoading","error","selectcountriesError","dispatch","useDispatch","useEffect","requestCountriesThunk","showCountires","Array","isArray","length","console","log","Container","Loader","map","flags","official","CountryCard","png"],"sourceRoot":""}