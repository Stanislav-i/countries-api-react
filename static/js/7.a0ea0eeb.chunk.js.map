{"version":3,"file":"static/js/7.a0ea0eeb.chunk.js","mappings":"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","sources":["Pages/CountryInfoPage/CountryInfoPage.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { Container } from 'components/Container';\nimport { Link, useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  requestCountryInfoThunk,\n  selectCountryInfo,\n  selectCountryInfoError,\n  selectCountryInfoIsLoading,\n} from 'redux/countryInfoSlice';\nimport Loader from 'components/Loader';\nimport { requestCountriesThunk, selectAllCountries } from 'redux/countryListSlice';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n  padding-top: 1.5rem;\n  padding-bottom: 1.5rem;\n\n  @media (min-width: 380px) {\n    width: 320px;\n  }\n\n  @media (min-width: 768px) {\n    width: 800px;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    padding: 2.5rem 0;\n  }\n\n  @media (min-width: 1024px) {\n    width: 100%;\n  }\n`;\n\nconst CardImg = styled.img`\n  display: block;\n  width: 100%;\n  height: 100%;\n  object-fit: contain;\n`;\n\nconst InfoSection = styled.div`\n  width: 100%;\n  height: 100%;\n  align-items: center;\n`;\nconst InfoTitle = styled.h2`\n  /* font-size: var(--fs-lg); */\n  font-weight: var(--fw-bold);\n  height: 25px;\n  text-align: center;\n`;\n\nconst InfoText = styled.div`\n  margin: 0;\n  font-size: var(--fs-sm);\n  line-height: 1.5;\n  font-weight: var(--fw-light);\n  text-align: center;\n\n  & > b {\n    font-weight: var(--fw-bold);\n  }\n`;\n\nconst StyledLi = styled.li`\n  display: inline-block;\n  margin-left: 5px;\n`;\n\nexport const CountryInfoPage = () => {\n  const { name } = useParams();\n  const countryInfo = useSelector(selectCountryInfo);\n  const countryInfoLoading = useSelector(selectCountryInfoIsLoading);\n  const countryInfoError = useSelector(selectCountryInfoError);\n  const dispatch = useDispatch();\n  const allCountries = useSelector(selectAllCountries);\n  let currencies = [];\n\n  useEffect(() => {\n    if (!countryInfo || countryInfo[0].name?.official !== name) {\n      dispatch(requestCountryInfoThunk(name));\n    }\n    \n    if (!allCountries) {\n      dispatch(requestCountriesThunk())\n    }\n  }, [name, countryInfo, allCountries, dispatch]);\n\n  const showCountryInfo =\n    Array.isArray(countryInfo) &&\n    countryInfo.length === 1 &&\n    countryInfo[0].name?.official === name &&\n    Array.isArray(allCountries);\n\n  if (showCountryInfo) {\n    for (const key in countryInfo[0].currencies) {\n      currencies.push(key);\n    }\n  }\n\n  return (\n    <Container>\n      {countryInfoLoading && <Loader />}\n      {countryInfoError && <p>Error occured... Error is {countryInfoError}</p>}\n      {showCountryInfo && (\n        <Wrapper>\n          <CardImg src={countryInfo[0].flags.png} alt={countryInfo[0].name} />\n          <InfoSection>\n            <InfoTitle>{countryInfo[0].name.common}</InfoTitle>\n            <InfoText>\n              <b>Official Name:</b> {countryInfo[0].name.official}\n            </InfoText>\n            <InfoText>\n              <b>Capital:</b> {countryInfo[0].capital}\n            </InfoText>\n            <InfoText>\n              <b>Region:</b> {countryInfo[0].region}\n            </InfoText>\n            <InfoText>\n              <b>SubRegion:</b> {countryInfo[0].subregion}\n            </InfoText>\n            <InfoText>\n              <b>Population:</b> {countryInfo[0].population}\n            </InfoText>\n            {currencies.map(curr => {\n              return (\n                <InfoText key={curr}>\n                  <b>Currencies:</b> {curr}\n                </InfoText>\n              );\n            })}\n            <ul>\n              <InfoText>\n                <b>Languages:</b>\n                {Object.values(countryInfo[0].languages).map(lang => {\n                  return <StyledLi key={lang}> {lang}</StyledLi>;\n                })}\n              </InfoText>\n            </ul>\n            <ul>\n              <InfoText>\n                <b>Domain:</b>\n                {countryInfo[0].tld?.map(dom => {\n                  return <StyledLi key={dom}> {dom}</StyledLi>;\n                })}\n              </InfoText>\n            </ul>\n            <ul>\n              <InfoText>\n                <b>Borders On:</b>\n                {countryInfo[0].borders ? (\n                  countryInfo[0].borders.map(border => {\n                    const borderCountry = allCountries?.filter(country=>country.cca3 === border);\n                    if (borderCountry[0].name.official === 'Russian Federation') {\n                      return null\n                    }\n                    return <StyledLi key={border}> <Link to={`/countryinfo/${borderCountry[0].name.official}`}>{border}</Link></StyledLi>;\n                  })\n                ) : (\n                  <span> This country does not border anyone</span>\n                )}\n              </InfoText>\n            </ul>\n          </InfoSection>\n        </Wrapper>\n      )}\n    </Container>\n  );\n};\n\nexport default CountryInfoPage;\n"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","CardImg","_templateObject2","InfoSection","_templateObject3","InfoTitle","_templateObject4","InfoText","_templateObject5","StyledLi","_templateObject6","CountryInfoPage","_countryInfo$0$name2","_countryInfo$0$tld","name","useParams","countryInfo","useSelector","selectCountryInfo","countryInfoLoading","selectCountryInfoIsLoading","countryInfoError","selectCountryInfoError","dispatch","useDispatch","allCountries","selectAllCountries","currencies","useEffect","_countryInfo$0$name","official","requestCountryInfoThunk","requestCountriesThunk","showCountryInfo","Array","isArray","length","key","push","_jsxs","Container","children","_jsx","Loader","src","flags","png","alt","common","capital","region","subregion","population","map","curr","Object","values","languages","lang","tld","dom","borders","border","borderCountry","filter","country","cca3","Link","to","concat"],"sourceRoot":""}