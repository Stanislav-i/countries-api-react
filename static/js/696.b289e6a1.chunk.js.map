{"version":3,"file":"static/js/696.b289e6a1.chunk.js","mappings":"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","sources":["components/CountryCard.jsx","components/SearchBox.jsx","components/RegionSelection.jsx","components/UserQueries.jsx","Pages/Home/HomePage.jsx"],"sourcesContent":["import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.article`\nborder-radius: var(--radii);\n  background-color: car(--colors-ui-base);\n  box-shadow: var(--shadow);\n  cursor: pointer;\n  overflow: hidden\n`;\n\n\nconst CardImg = styled.img`\ndisplay: block;\n  width: 100%;\n  height: 150px;\n  object-fit: cover;\n  object-position: center;\n  box-shadow: var(--shadow);\n`;\n\nconst CardInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-bottom: 1rem;\n`;\n\nconst CardInfoItem = styled.li`\n    margin: 0;\n    font-size: var(--fs-sm);\n  line-height: 1.5;\n  font-weight: var(--fw-light);\n\n  & > b {\n    font-weight: var(--fw-bold);\n  }\n`;\n\nconst CardTitle = styled.h3`\n  font-size: var(--fs-md);\n  font-weight: var(--fw-bold);\n  height: 25px;\n  text-align: center;\n`;\n\nconst CardList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 1rem 0 0;\n  text-align: center;\n`;\n\nexport const CountryCard = ({name, population, region, capital, flag}) => {\n    return (\n      <Link to={`/countryinfo/${name}`}>\n        <Wrapper>\n        <CardImg src={flag} alt={name} />\n        <CardInfo>\n        <CardTitle>{name}</CardTitle>\n        <CardList>\n        <CardInfoItem><b>Population</b>: {population}</CardInfoItem>\n        <CardInfoItem><b>Region</b>: {region}</CardInfoItem>\n        <CardInfoItem><b>Capital</b>: {capital}</CardInfoItem>\n        </CardList>\n        </CardInfo>\n        </Wrapper>\n        </Link>\n    );\n};\n\nexport default CountryCard;","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectUserSearchQuery, setSearchValue } from 'redux/userQueriesSlice';\nimport styled from 'styled-components';\n\nconst InputContainer = styled.label`\n  background-color: var(--colors-ui-base);\n  padding: 1rem 2rem;\n  display: flex;\n  align-items: center;\n\n  border-radius: var(--radii);\n  box-shadow: var(--shadow);\n  width: 100%;\n  margin-bottom: 1rem;\n\n  @media (min-width: 767px) {\n    margin-bottom: 0;\n    width: 280px;\n  }\n`;\n\nconst Input = styled.input.attrs({\n  type: 'search',\n  placeholder: 'Search for a country...',\n})`\n  margin-left: 2rem;\n  border: none;\n  outline: none;\n  color: var(--color-text);\n  background-color: var(--colors-ui-base);\n`;\n\nconst SearchBox = () => {\n    const userSearchQuery = useSelector(selectUserSearchQuery);\n    const dispatch = useDispatch();\n\n    const handleUserSearchQuery = e => {\n        dispatch(setSearchValue(e.target.value));\n    }\n\n    return (\n        <InputContainer>\n\n        <Input type='text' value={userSearchQuery} onChange={handleUserSearchQuery}/>\n      </InputContainer>\n    );\n};\n\nexport default SearchBox;","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setRegion } from 'redux/userQueriesSlice';\n\nconst RegionSelection = () => {\n    const dispatch = useDispatch();\n\n    const onOptionChange = e => {\n        dispatch(setRegion(e.target.value))\n    }\n    \n    return (\n<form >\n        <section>\n          <h3>Choose region</h3>\n          <label>\n            Europe\n            <input\n              type=\"radio\"\n              name=\"region\"\n              value=\"Europe\"\n              onChange={onOptionChange}\n              defaultChecked\n            />\n          </label>\n          <label>\n            Asia\n            <input\n              type=\"radio\"\n              name=\"region\"\n              value=\"Asia\"\n              onChange={onOptionChange}\n            />\n          </label>\n          <label>\n          Oceania\n            <input\n              type=\"radio\"\n              name=\"region\"\n              value=\"Oceania\"\n              onChange={onOptionChange}\n            />\n          </label>\n          <label>\n          Africa\n            <input\n              type=\"radio\"\n              name=\"region\"\n              value=\"Africa\"\n              onChange={onOptionChange}\n            />\n          </label>\n          <label>\n          Americas\n            <input\n              type=\"radio\"\n              name=\"region\"\n              value=\"Americas\"\n              onChange={onOptionChange}\n            />\n          </label>\n        </section>\n      </form>\n    );\n};\n\nexport default RegionSelection;","import React from 'react';\nimport styled from 'styled-components';\nimport SearchBox from './SearchBox';\nimport RegionSelection from './RegionSelection';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 10px;\n`;\n\nexport const UserQueries = () => {\n    return (\n        <Wrapper>\n           <SearchBox /> \n           <RegionSelection />\n        </Wrapper>\n    );\n};\n\nexport default UserQueries;","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport {\n  requestCountriesThunk,\n  selectAllCountries,\n  selectcountriesError,\n  selectcountriesIsLoading,\n} from 'redux/countryListSlice';\nimport CountryCard from 'components/CountryCard';\nimport UserQueries from 'components/UserQueries';\nimport Loader from 'components/Loader';\nimport styled from 'styled-components';\nimport { Container } from 'components/Container';\nimport { selectUserRegion, selectUserSearchQuery } from 'redux/userQueriesSlice';\n\nconst List = styled.section`\n    /* width: 380px; */\n    padding: 2rem 0;\n    margin: 0 auto;\n    display: grid;\n    grid-template-columns: repeat(1, 1fr);\n    gap: 2rem;\n\n    @media (min-width: 380px) {\n      width: 320px;\n    }\n\n    @media (min-width: 768px) {\n    width: 100%;\n    grid-template-columns: repeat(2, 1fr);\n    gap: 3rem;\n\n    padding: 2.5rem 0;\n  }\n\n  @media (min-width: 1024px) {\n    grid-template-columns: repeat(4, 1fr);\n    gap: 4rem;\n  }\n`;\n\n\nexport const HomePage = () => {\n  const allCountries = useSelector(selectAllCountries);\n  const region = useSelector(selectUserRegion);\n  const userSearchQuery = useSelector(selectUserSearchQuery);\n  const isLoading = useSelector(selectcountriesIsLoading);\n  const error = useSelector(selectcountriesError);\n  const dispatch = useDispatch();\n  \n\n  useEffect(() => {\n    dispatch(requestCountriesThunk());\n  }, [dispatch]);\n  // console.log(allCountries);\n\n  const countryByRegion = allCountries?.filter(country => country.region === region);\n  \n  const getSearchedCountries = () => {\n    const normalizedFilter = userSearchQuery.toLocaleLowerCase();\n    return allCountries?.filter(country =>\n      country.name.official.toLocaleLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const showCountires = Array.isArray(allCountries) && allCountries.length > 0 && !userSearchQuery;\n  const showSearchedCountries = Array.isArray(allCountries) && allCountries.length > 0 && userSearchQuery;\n\n  return (\n    <Container>\n      {isLoading && <Loader />}\n      {error && <p>Error occured... Error is {error}</p>}\n      <UserQueries />\n      <List>\n        {showCountires &&\n          countryByRegion.map(({ name, population, region, capital, flags, fifa}) => {\n            if(name.official === \n                \"Russian Federation\") \n            return null\n            \n           return <li key={name.official}>\n            <CountryCard\n              name={name.official}\n              population={population}\n              region={region}\n              capital={capital}\n              flag={flags.png}\n              fifa={fifa}\n            />\n          </li>\n})}\n\n{showSearchedCountries &&\n          getSearchedCountries().map(({ name, population, region, capital, flags, fifa}) => {\n            if(name.official === \n                \"Russian Federation\") \n            return null\n            \n           return <li key={name.official}>\n            <CountryCard\n              name={name.official}\n              population={population}\n              region={region}\n              capital={capital}\n              flag={flags.png}\n              fifa={fifa}\n            />\n          </li>\n})}   \n          \n\n\n\n      </List>\n    </Container>\n  );\n};\n\nexport default HomePage;\n"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","CardImg","_templateObject2","CardInfo","_templateObject3","CardInfoItem","_templateObject4","CardTitle","_templateObject5","CardList","_templateObject6","_ref","name","population","region","capital","flag","_jsx","Link","to","concat","children","_jsxs","src","alt","InputContainer","Input","type","placeholder","userSearchQuery","useSelector","selectUserSearchQuery","dispatch","useDispatch","value","onChange","e","setSearchValue","target","onOptionChange","setRegion","defaultChecked","SearchBox","RegionSelection","List","HomePage","allCountries","selectAllCountries","selectUserRegion","isLoading","selectcountriesIsLoading","error","selectcountriesError","useEffect","requestCountriesThunk","countryByRegion","filter","country","showCountires","Array","isArray","length","showSearchedCountries","Container","Loader","UserQueries","map","flags","fifa","official","CountryCard","png","normalizedFilter","toLocaleLowerCase","includes","getSearchedCountries","_ref2"],"sourceRoot":""}