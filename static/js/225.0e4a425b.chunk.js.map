{"version":3,"file":"static/js/225.0e4a425b.chunk.js","mappings":"gSAGMA,EAAUC,EAAAA,GAAAA,QAAcC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0JASxBC,EAAUH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,6IASpBG,EAAWL,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,wGAOrBK,EAAeP,EAAAA,GAAAA,GAASQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,kKAWxBO,EAAYT,EAAAA,GAAAA,GAASU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,8GAOrBS,EAAWX,EAAAA,GAAAA,GAASY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,0FAyB1B,EAlB2B,SAAHW,GAAmD,IAA9CC,EAAID,EAAJC,KAAMC,EAAUF,EAAVE,WAAYC,EAAMH,EAANG,OAAQC,EAAOJ,EAAPI,QAASC,EAAIL,EAAJK,KAC5D,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAE,gBAAAC,OAAkBR,GAAOS,UAC/BC,EAAAA,EAAAA,MAACzB,EAAO,CAAAwB,SAAA,EACRJ,EAAAA,EAAAA,KAAChB,EAAO,CAACsB,IAAKP,EAAMQ,IAAKZ,KACzBU,EAAAA,EAAAA,MAACnB,EAAQ,CAAAkB,SAAA,EACTJ,EAAAA,EAAAA,KAACV,EAAS,CAAAc,SAAET,KACZU,EAAAA,EAAAA,MAACb,EAAQ,CAAAY,SAAA,EACTC,EAAAA,EAAAA,MAACjB,EAAY,CAAAgB,SAAA,EAACJ,EAAAA,EAAAA,KAAA,KAAAI,SAAG,eAAc,KAAGR,MAClCS,EAAAA,EAAAA,MAACjB,EAAY,CAAAgB,SAAA,EAACJ,EAAAA,EAAAA,KAAA,KAAAI,SAAG,WAAU,KAAGP,MAC9BQ,EAAAA,EAAAA,MAACjB,EAAY,CAAAgB,SAAA,EAACJ,EAAAA,EAAAA,KAAA,KAAAI,SAAG,YAAW,KAAGN,eAMvC,E,iBCxDMU,EAAO3B,EAAAA,GAAAA,QAAcC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gdA2Bd0B,EAAW,WACtB,IAAMC,GAAeC,EAAAA,EAAAA,IAAYC,EAAAA,IAC3BC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IACxBC,GAAQJ,EAAAA,EAAAA,IAAYK,EAAAA,IACpBC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,IAAsB,QACjC,GAAG,CAACH,IAEJ,IAAMI,EAAgBC,MAAMC,QAAQb,IAAiBA,EAAac,OAAS,EAI3E,OAFAC,QAAQC,IAAIhB,IAGVL,EAAAA,EAAAA,MAACsB,EAAAA,EAAS,CAAAvB,SAAA,CACLS,IAAab,EAAAA,EAAAA,KAAC4B,EAAAA,EAAM,IACtBb,IAASV,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,6BAA2BW,MACxCf,EAAAA,EAAAA,KAACQ,EAAI,CAAAJ,SACFiB,GACCX,EAAamB,KAAI,SAAAnC,GAAwD,IAArDC,EAAID,EAAJC,KAAMC,EAAUF,EAAVE,WAAYC,EAAMH,EAANG,OAAQC,EAAOJ,EAAPI,QAASgC,EAAKpC,EAALoC,MAAOC,EAAIrC,EAAJqC,KAC5D,MACI,uBADDpC,EAAKqC,SAED,MAEDhC,EAAAA,EAAAA,KAAA,MAAAI,UACNJ,EAAAA,EAAAA,KAACiC,EAAW,CACVtC,KAAMA,EAAKqC,SACXpC,WAAYA,EACZC,OAAQA,EACRC,QAASA,EACTC,KAAM+B,EAAMI,IACZH,KAAMA,KAPOpC,EAAKqC,SAUhC,QAIA,EAEA,G","sources":["components/CountryCard.jsx","Pages/Home/HomePage.jsx"],"sourcesContent":["import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.article`\nborder-radius: var(--radii);\n  background-color: car(--colors-ui-base);\n  box-shadow: var(--shadow);\n  cursor: pointer;\n  overflow: hidden\n`;\n\n\nconst CardImg = styled.img`\ndisplay: block;\n  width: 100%;\n  height: 150px;\n  object-fit: cover;\n  object-position: center;\n  box-shadow: var(--shadow);\n`;\n\nconst CardInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-bottom: 1rem;\n`;\n\nconst CardInfoItem = styled.li`\n    margin: 0;\n    font-size: var(--fs-sm);\n  line-height: 1.5;\n  font-weight: var(--fw-light);\n\n  & > b {\n    font-weight: var(--fw-bold);\n  }\n`;\n\nconst CardTitle = styled.h3`\n  font-size: var(--fs-md);\n  font-weight: var(--fw-bold);\n  height: 25px;\n  text-align: center;\n`;\n\nconst CardList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 1rem 0 0;\n  text-align: center;\n`;\n\nexport const CountryCard = ({name, population, region, capital, flag}) => {\n    return (\n      <Link to={`/countryinfo/${name}`}>\n        <Wrapper>\n        <CardImg src={flag} alt={name} />\n        <CardInfo>\n        <CardTitle>{name}</CardTitle>\n        <CardList>\n        <CardInfoItem><b>Population</b>: {population}</CardInfoItem>\n        <CardInfoItem><b>Region</b>: {region}</CardInfoItem>\n        <CardInfoItem><b>Capital</b>: {capital}</CardInfoItem>\n        </CardList>\n        </CardInfo>\n        </Wrapper>\n        </Link>\n    );\n};\n\nexport default CountryCard;","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport {\n  requestCountriesThunk,\n  selectAllCountries,\n  selectcountriesError,\n  selectcountriesIsLoading,\n} from 'redux/countryListSlice';\nimport CountryCard from 'components/CountryCard';\nimport Loader from 'components/Loader';\nimport styled from 'styled-components';\nimport { Container } from 'components/Container';\n\nconst List = styled.section`\n    /* width: 380px; */\n    padding: 2rem 0;\n    margin: 0 auto;\n    display: grid;\n    grid-template-columns: repeat(1, 1fr);\n    gap: 2rem;\n\n    @media (min-width: 380px) {\n      width: 320px;\n    }\n\n    @media (min-width: 768px) {\n    width: 100%;\n    grid-template-columns: repeat(2, 1fr);\n    gap: 3rem;\n\n    padding: 2.5rem 0;\n  }\n\n  @media (min-width: 1024px) {\n    grid-template-columns: repeat(4, 1fr);\n    gap: 4rem;\n  }\n`;\n\n\nexport const HomePage = () => {\n  const allCountries = useSelector(selectAllCountries);\n  const isLoading = useSelector(selectcountriesIsLoading);\n  const error = useSelector(selectcountriesError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(requestCountriesThunk(\"asia\"));\n  }, [dispatch]);\n\n  const showCountires = Array.isArray(allCountries) && allCountries.length > 0;\n\n  console.log(allCountries);\n\n  return (\n    <Container>\n        {isLoading && <Loader />}\n      {error && <p>Error occured... Error is {error}</p>}\n      <List>\n        {showCountires &&\n          allCountries.map(({ name, population, region, capital, flags, fifa}) => {\n            if(name.official === \n                \"Russian Federation\") \n            return null\n            \n           return <li key={name.official}>\n            <CountryCard\n              name={name.official}\n              population={population}\n              region={region}\n              capital={capital}\n              flag={flags.png}\n              fifa={fifa}\n            />\n          </li>\n})}\n      </List>\n    </Container>\n  );\n};\n\nexport default HomePage;\n"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","CardImg","_templateObject2","CardInfo","_templateObject3","CardInfoItem","_templateObject4","CardTitle","_templateObject5","CardList","_templateObject6","_ref","name","population","region","capital","flag","_jsx","Link","to","concat","children","_jsxs","src","alt","List","HomePage","allCountries","useSelector","selectAllCountries","isLoading","selectcountriesIsLoading","error","selectcountriesError","dispatch","useDispatch","useEffect","requestCountriesThunk","showCountires","Array","isArray","length","console","log","Container","Loader","map","flags","fifa","official","CountryCard","png"],"sourceRoot":""}